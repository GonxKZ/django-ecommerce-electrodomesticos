name: Security IaC Pipeline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  analyze-iac:
    name: Analyze Infrastructure as Code
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Analizar archivos de Docker con Hadolint
      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true
        with:
          output-file: ./iac-reports/hadolint-results.sarif
          format: sarif
          no-fail: true
          
      # Crear directorio para informes
      - name: Create reports directory
        run: mkdir -p ./iac-reports
          
      # Analizar archivos de configuración YAML con yamllint
      - name: Install yamllint
        run: pip install yamllint
          
      - name: Run yamllint
        run: |
          yamllint -f parsable .github/workflows/ > ./iac-reports/yamllint-results.txt || true
          echo "Análisis YAML completado"
          
      # Analizar archivos Docker y Compose
      - name: Check Docker files
        run: |
          echo "# Análisis de Archivos Docker" > ./iac-reports/docker-check.txt
          echo "Ejecutado en: $(date)" >> ./iac-reports/docker-check.txt
          echo "\nBuscando archivos Docker..." >> ./iac-reports/docker-check.txt
          find . -name "Dockerfile" -o -name "docker-compose.yml" | tee -a ./iac-reports/docker-check.txt || true
          
      # Analizar variables de entorno en archivos .env (si existen)
      - name: Check environment files
        run: |
          echo "# Análisis de Variables de Entorno" > ./iac-reports/env-check.txt
          echo "Ejecutado en: $(date)" >> ./iac-reports/env-check.txt
          echo "\nBuscando archivos .env..." >> ./iac-reports/env-check.txt
          find . -name "*.env*" -not -path "*/\.*" | tee -a ./iac-reports/env-check.txt || true
          
          for file in $(find . -name "*.env.example" -o -name "*.env.sample" -not -path "*/\.*"); do
            echo "\nAnalizando $file:" >> ./iac-reports/env-check.txt
            grep -v '^#' $file | grep -v '^$' >> ./iac-reports/env-check.txt || true
          done
          
      # Analizar archivos de configuración
      - name: Check configuration files
        run: |
          echo "# Análisis de Archivos de Configuración" > ./iac-reports/config-check.txt
          echo "Ejecutado en: $(date)" >> ./iac-reports/config-check.txt
          
          echo "\n## Archivos de configuración Django (settings.py)" >> ./iac-reports/config-check.txt
          find . -name "settings*.py" | tee -a ./iac-reports/config-check.txt || true
          
          echo "\n## Archivos de configuración en general" >> ./iac-reports/config-check.txt
          find . -name "*.conf" -o -name "*.config" -o -name "*.ini" | tee -a ./iac-reports/config-check.txt || true
          
      # Subir resultados
      - name: Upload IaC analysis results
        uses: actions/upload-artifact@v4
        with:
          name: iac-reports
          path: ./iac-reports/ 